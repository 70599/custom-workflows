name: sing-box

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'branch or sha'
        required: false
        default: dev-next

jobs:
  cross:
    strategy:
      matrix:
        include:
          # linux
          - name: linux-amd64
            goos: linux
            goarch: amd64
            goamd64: v1
            tags: with_low_memory,with_quic,with_gvisor,with_wireguard,with_reality_server,with_ech
          - name: linux-amd64-v3
            goos: linux
            goarch: amd64
            goamd64: v3
            tags: with_low_memory,with_quic,with_gvisor,with_wireguard,with_reality_server,with_ech
          - name: linux-arm64
            goos: linux
            goarch: arm64
            tags: with_low_memory,with_quic,with_gvisor,with_wireguard,with_utls,with_ech,with_clash_api
    
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      TAGS: ${{ matrix.tags }}
    steps:
      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
        with:
          repository: SagerNet/sing-box
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 0
      - name: Get latest go version
        id: version
        run: |
          echo go_version=$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g') >> $GITHUB_OUTPUT
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ steps.version.outputs.go_version }}
      - name: Build
        id: build
        run: make
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: sing-box-${{ matrix.name }}
          path: sing-box*
